{"version":3,"file":"jcampconverter.min.js","sources":["../src/complexChromatogram.js","../src/convertToFloatArray.js","../src/parse/fastParseXYData.js","../src/parse/parsePeakTable.js","../src/parse/parseXYA.js","../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../src/2d/add2D.js","../src/2d/convertTo3DZ.js","../src/2d/generateContourLines.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../src/profiling.js","../src/simpleChromatogram.js","../src/postProcessing.js","../src/postProcessingNMR.js","../src/prepareNtuplesDatatable.js","../src/prepareSpectrum.js","../src/convert.js","../src/createTree.js"],"sourcesContent":["const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export default function createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n"],"names":["GC_MS_FIELDS","complexChromatogram","result","spectra","length","chromatogram","times","Array","series","ms","dimension","data","existingGCMSFields","i","label","convertMSFieldToLabel","push","spectrum","pageValue","j","parseFloat","x","y","isMSField","canonicDataLabel","indexOf","value","toLowerCase","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","Math","pow","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","Object","keys","numberOfVariables","forEach","variable","lines","split","values","trim","logs","parseXYZ","xFactor","parseXY","key","parseXYA","removeSymbolRegExp","isXYAdata","toString","prototype","object","call","endsWith","a","d","e","f","g","h","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","add2D","options","zData","minZ","maxZ","ySize","xSize","z","lastX","lastY","reverse","minX","min","maxX","max","minY","maxY","noise","getMedian","map","abs","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","x0","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","descending","number$1","variance","array","n","m","s","isNaN","deviation","v","sqrt","extent","constant","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","step1","log","LN10","error","sturges","LN2","number","histogram","domain","threshold","xz","x1","tz","shift","pop","bin","bins","_","thresholds","quantile","p","freedmanDiaconis","sort","scott","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","factory","FFT","_n","_bitrev","_cstb","core","init","Error","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","tmp","wr","wi","xr","n4","l","k","Uint32Array","Float64Array","_paddingZero","n2","n8","n2p4","sin","PI","dc","ds","apis","bt","ifft","this","gyromagneticRatio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","unit","pageSymbolIndex","pageSymbol","units","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","kind","xIndex","yIndex","firstVariable","secondVariable","charAt","lowerCaseSymbol","index","first","last","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","assign","entries","tmpResult","children","parentsStack","ldrs","ldr","position","dataLabel","substring","dataValue","infos","datatable","parentEntry","info","meta","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","match","target","startsWith","parsedValue","Number","flatten","current","flat","stack","ntupleLevel","spaces","line","labelLine","join","finished","undefined"],"mappings":"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"}