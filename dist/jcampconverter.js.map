{"version":3,"file":"jcampconverter.js","sources":["../src/createTree.js","../src/complexChromatogram.js","../src/convertToFloatArray.js","../src/parse/fastParseXYData.js","../src/parse/parsePeakTable.js","../src/parse/parseXYA.js","../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../src/2d/convertTo3DZ.js","../src/2d/generateContourLines.js","../src/2d/add2D.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../src/postProcessingNMR.js","../src/profiling.js","../src/simpleChromatogram.js","../src/postProcessing.js","../src/prepareNtuplesDatatable.js","../src/prepareSpectrum.js","../src/convert.js"],"sourcesContent":["export default function createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n"],"names":["createTree","jcamp","options","flatten","TypeError","lines","split","flat","stack","result","current","ntupleLevel","spaces","includes","i","length","line","labelLine","replace","substring","title","trim","j","startsWith","push","join","children","finished","pop","undefined","match","canonicDataLabel","toUpperCase","dataType","forEach","entry","GC_MS_FIELDS","complexChromatogram","spectra","chromatogram","times","Array","series","ms","dimension","data","existingGCMSFields","label","convertMSFieldToLabel","spectrum","pageValue","parseFloat","x","y","isMSField","indexOf","value","toLowerCase","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","Math","pow","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","Object","keys","parseXY","parseXYZ","key","values","xFactor","logs","numberOfVariables","variable","parseXYA","removeSymbolRegExp","isXYAdata","toString","prototype","isAnyArray","object","call","endsWith","a","d","e","f","g","h","c","b","_ref","module","exports","window","median","input","isArray","quickSelectMedian","slice","convertTo3DZ","minZ","maxZ","ySize","xSize","z","lastX","lastY","reverse","minX","min","maxX","max","minY","maxY","noise","getMedian","map","abs","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","minMax","global","factory","this","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","descending","number$1","variance","array","n","m","s","isNaN","deviation","v","sqrt","extent","constant","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","step1","log","LN10","error","sturges","LN2","number","histogram","domain","threshold","xz","x1","tz","shift","bins","bin","_","thresholds","quantile","p","freedmanDiaconis","sort","scott","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","FFT","release","date","_n","_bitrev","_cstb","core","init","_initArray","_makeBitReversalTable","_makeCosSinTable","Error","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","tmp","wr","wi","xr","n4","l","k","Uint32Array","Float64Array","_paddingZero","n2","n8","n2p4","sin","PI","dc","ds","apis","bt","ifft","gyromagneticRatio","postProcessingNMR","entriesFlat","observeFrequency","shiftOffsetVal","ntuples","symbol","xUnits","nucleus","unit","pageSymbolIndex","pageSymbol","units","ratio0","ratio1","ratio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","kind","xIndex","yIndex","firstVariable","secondVariable","charAt","lowerCaseSymbol","index","first","last","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","convert","assign","entries","tmpResult","parentsStack","ldrs","ldr","position","dataLabel","dataValue","infos","datatable","parentEntry","info","meta","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","target","parsedValue","Number"],"mappings":"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"}